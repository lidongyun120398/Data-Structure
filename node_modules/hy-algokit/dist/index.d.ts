declare function btPrint(root: PrintableNode | null): void
export function cbtPrint<T = any>(arr: T[]): void

export type SortAlgorithm = (arr: number[]) => number[]
export function measureSort(sortAlgorithm: SortAlgorithm, n: number = 100000): void
export function compareSort(sortFunctions: SortAlgorithm[], dataCount: number = 10000): void
export function swap(arr: number[], i: number, j: number): void
export function testSort(sortFn: SortAlgorithm): void

declare function testOrderSearchEfficiency(
  searchFn: ISearchFunction, 
  arr: number[] | null = null, 
  target: number = -1
): void

declare function isPrime(num: number): boolean

export interface PrintableNode {
  left: PrintableNode | null;
  right: PrintableNode | null;
  value: any;
}

export interface ISearchFunction {
  (arr: number[], target: number): number
}
